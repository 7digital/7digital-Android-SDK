apply plugin: 'com.android.library'
apply plugin: 'com.github.ben-manes.versions'

android {
    compileSdkVersion 19
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 5
        versionName "0.94"

        //check for properties in the gradle file, and warn the user
        for (String property : ["TEST_USER_EMAIL","TEST_USER_PASSWORD","TEST_OAUTH_CONSUMER_KEY","TEST_OAUTH_CONSUMER_SECRET"]) {
            if (!project.properties.containsKey(property)) {
                throw new IllegalArgumentException("${property} property must be added to the projects gradle.properties file in order to" +
                        " run the sdk. Refer to the readme for more information.")
            }
        }

        buildConfigField "String", "TEST_USER_EMAIL", "$TEST_USER_EMAIL"
        buildConfigField "String", "TEST_USER_PASSWORD", "$TEST_USER_PASSWORD"
        buildConfigField "String", "TEST_OAUTH_CONSUMER_KEY", "$TEST_OAUTH_CONSUMER_KEY"
        buildConfigField "String", "TEST_OAUTH_CONSUMER_SECRET", "$TEST_OAUTH_CONSUMER_SECRET"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        textReport true
        disable 'InvalidPackage'

    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

    //to create jar releases, run ./gradlew jarWithDependenciesRelease, or ./gradlew jarRelease
    android.libraryVariants.all { variant ->
        def name = variant.buildType.name
        if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
            return; // Skip debug builds.
        }

        /**
         * This task creates a (slim) jar that just includes the 7DI SDK
         */
        def slimJar = project.tasks.create "jar${name.capitalize()}", Jar
        slimJar.dependsOn variant.javaCompile
        slimJar.archiveName = "7digital-android-sdk-v${variant.mergedFlavor.versionName}.jar"
        slimJar.from variant.javaCompile.destinationDir

        /**
         * This task creates a fat jar that includes all compiled dependencies as well
         */
        def fatJar = project.tasks.create "jarWithDependencies${name.capitalize()}", Jar
        fatJar.dependsOn slimJar
        fatJar.from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        fatJar.with slimJar

        //These files need to be excluded from the jar because they throw errors when an android project
        //references this jar
        fatJar.exclude 'classes.jar'
        fatJar.exclude 'AndroidManifest.xml'
        //set the output name
        fatJar.archiveName = "7digital-android-sdk-v${variant.mergedFlavor.versionName}-withDependencies.jar"


        artifacts.add('archives', slimJar);
    }

dependencies {

    compile('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.0'

    provided 'com.mcxiaoke.volley:library:1.0.10'

    compile 'joda-time:joda-time:2.7'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
